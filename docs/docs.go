// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "SouthWinds Tech ltd",
            "url": "https://www.southwinds.io/",
            "email": "info@southwinds.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "Checks that the HTTP server is listening on the required port.\nUse a liveliness probe.\nIt does not guarantee the server is ready to accept calls.",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "General"
                ],
                "summary": "Check that the HTTP API is live",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/notify": {
            "post": {
                "description": "sends a notification of the specified type",
                "consumes": [
                    "application/yaml",
                    " application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Sends a new notification",
                "parameters": [
                    {
                        "description": "the notification information to send",
                        "name": "notification",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/core.NotificationMsg"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "core.NotificationMsg": {
            "type": "object",
            "properties": {
                "content": {
                    "description": "Content of the template",
                    "type": "string",
                    "example": "A new event has been received."
                },
                "recipient": {
                    "description": "Recipient of the notification if type is email",
                    "type": "string",
                    "example": "info@email.com"
                },
                "subject": {
                    "description": "Subject of the notification",
                    "type": "string",
                    "example": "New Notification"
                },
                "type": {
                    "description": "Type of the notification (e.g. email, snow, etc.)",
                    "type": "string",
                    "example": "email"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Notify Service",
	Description:      "Notification Service",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
